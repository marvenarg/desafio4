apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
type: Opaque
stringData:
  MYSQL_DATABASE: devopsdb
  MYSQL_USER: devuser
  MYSQL_PASSWORD: devpass
  MYSQL_ROOT_PASSWORD: rootpass
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-init-sql
data:
  init.sql: |
    CREATE TABLE IF NOT EXISTS uploads (
      id INT PRIMARY KEY AUTO_INCREMENT,
      filename VARCHAR(255),
      uploaded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: desafio4-mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: desafio4-mysql
  template:
    metadata:
      labels:
        app: desafio4-mysql
    spec:
      containers:
        - name: mysql
          image: mariadb:11.8.2
          env:
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_DATABASE
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_USER
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_PASSWORD
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_ROOT_PASSWORD
          volumeMounts:
            - name: mysql-initdb
              mountPath: /docker-entrypoint-initdb.d
            - name: mysql-data
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-initdb
          configMap:
            name: mysql-init-sql
            items:
              - key: init.sql
                path: init.sql
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: db
spec:
  selector:
    app: desafio4-mysql
  ports:
    - port: 3306
      targetPort: 3306
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: desafio4-web
spec:
  replicas: 3
  selector:
    matchLabels:
      app: desafio4-web
  template:
    metadata:
      labels:
        app: desafio4-web
    spec:
      containers:
        - name: webapp
          image: mysven/desafio3:v13
          env:
            - name: MYSQL_HOST
              value: db
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_DATABASE
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_USER
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_PASSWORD
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: desafio4-service
spec:
  type: NodePort
  selector:
    app: desafio4-web
  ports:
    - port: 5000
      targetPort: 80
      nodePort: 30036
